name: Build, Test & Coverage Analysis

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    name: Build, Test & Coverage Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'front/package-lock.json'

      - name: Restore Maven packages cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/back/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Backend - Build and Test with Jacoco Coverage
        working-directory: back
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          echo "üî® Building backend..."
          mvn clean compile
          
          echo "üß™ Running backend tests with coverage..."
          mvn test jacoco:report
          
          echo "üìä Jacoco coverage report generated!"
          ls -la target/site/jacoco/ || echo "No jacoco directory found"

      - name: Frontend - Install dependencies
        working-directory: front
        run: |
          echo "üì¶ Installing frontend dependencies..."
          npm ci

      - name: Frontend - Run tests with coverage
        working-directory: front
        env:
          CI: true
        run: |
          echo "üß™ Running frontend tests with coverage..."
          npm run test:ci
          
          echo "üìä Frontend coverage report generated!"
          ls -la coverage/bobapp/ || echo "No coverage directory found"

      - name: Download SonarQube Scanner CLI
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip

      - name: SonarQube Analysis Frontend
        working-directory: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ../sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner \
            -Dsonar.projectKey=EmySim_BobApp \
            -Dsonar.organization=emysim \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=src \
            -Dsonar.tests=src \
            -Dsonar.test.inclusions=**/*.spec.ts,**/*.test.ts \
            -Dsonar.exclusions=src/**/*.spec.ts,src/**/*.test.ts \
            -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info \
            -Dsonar.login=${SONAR_TOKEN}

      - name: SonarCloud Analysis with Coverage
        working-directory: back
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "üîç Running SonarCloud analysis with coverage..."
          mvn sonar:sonar \
            -Dsonar.projectKey=EmySim_BobApp \
            -Dsonar.organization=emysim \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=src,../front/src \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.javascript.lcov.reportPaths=../front/coverage/bobapp/lcov.info \
            -Dsonar.tests=src/test/java,../front/src \
            -Dsonar.test.inclusions=**/*.spec.ts,**/*.test.ts

      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco/
          retention-days: 30

      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage/bobapp/
          retention-days: 30

      - name: Coverage Summary
        run: |
          echo "üìä COVERAGE SUMMARY üìä"
          echo "========================"
          
          if [ -f "back/target/site/jacoco/index.html" ]; then
            echo "‚úÖ Backend (Jacoco): Report generated"
            echo "üìÅ Location: back/target/site/jacoco/"
          else
            echo "‚ùå Backend coverage report not found"
          fi
          
          if [ -f "front/coverage/bobapp/index.html" ]; then
            echo "‚úÖ Frontend (Angular): Report generated"
            echo "üìÅ Location: front/coverage/bobapp/"
          else
            echo "‚ùå Frontend coverage report not found"
          fi

      - name: Save Maven packages cache
        uses: actions/cache/save@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/back/pom.xml') }}

      - name: Save SonarCloud cache
        uses: actions/cache/save@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar