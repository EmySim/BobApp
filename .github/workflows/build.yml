name: Build, Test & SonarCloud Quality Analysis

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quality-analysis:
    name: Quality Analysis with SonarCloud
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code with full history for SonarCloud
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Setup Java (JDK 17 for SonarQube scanner)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # 3Ô∏è‚É£ Setup Node.js for Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'front/package-lock.json'

      # 4Ô∏è‚É£ Backend: Build and Test with Coverage
      - name: Backend - Build and Test with Jacoco Coverage
        working-directory: back
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          echo "üî® Building backend..."
          mvn clean compile
          
          echo "üß™ Running backend tests with coverage..."
          mvn test jacoco:report
          
          echo "üìä Verifying backend coverage files..."
          ls -la target/site/jacoco/
          if [ -f "target/site/jacoco/jacoco.xml" ]; then
            echo "‚úÖ Backend jacoco.xml found"
            echo "üìÑ File size: $(wc -l target/site/jacoco/jacoco.xml)"
          else
            echo "‚ùå Backend jacoco.xml missing!"
          fi

      # 5Ô∏è‚É£ Frontend: Install dependencies and test with coverage
      - name: Frontend - Install dependencies
        working-directory: front
        run: |
          echo "üì¶ Installing frontend dependencies..."
          npm ci

      - name: Frontend - Run tests with coverage
        working-directory: front
        env:
          CI: true
        run: |
          echo "üß™ Running frontend tests with coverage..."
          npm run test:ci
          
          echo "üìä Verifying frontend coverage files..."
          ls -la coverage/bobapp/
          if [ -f "coverage/bobapp/lcov.info" ]; then
            echo "‚úÖ Frontend lcov.info found"
            echo "üìÑ File size: $(wc -l coverage/bobapp/lcov.info)"
            echo "üìÑ Preview (first 10 lines):"
            head -10 coverage/bobapp/lcov.info
          else
            echo "‚ùå Frontend lcov.info missing!"
            echo "üìÅ Available files:"
            find coverage/ -name "*.info" -o -name "*.lcov" || echo "No lcov files found"
          fi

      # 6Ô∏è‚É£ Debug: Verify all coverage files before SonarCloud
      - name: Debug - Verify Coverage Files
        run: |
          echo "üîç COVERAGE FILES DEBUG üîç"
          echo "=========================="
          
          echo "üìä Backend Coverage Files:"
          find back/ -name "*.xml" -path "*/jacoco/*" || echo "No backend XML files"
          
          echo "üìä Frontend Coverage Files:"
          find front/ -name "*.info" -o -name "*.lcov" || echo "No frontend LCOV files"
          
          echo "üìä All coverage directories:"
          find . -type d -name "coverage" -o -name "jacoco" || echo "No coverage directories"

      # 7Ô∏è‚É£ SonarCloud Analysis avec chemins absolus
      - name: SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=EmySim_BobApp
            -Dsonar.organization=emysim
            -Dsonar.projectName=BobApp
            -Dsonar.sources=back/src/main,front/src
            -Dsonar.tests=back/src/test,front/src
            -Dsonar.test.inclusions=**/*Test.java,**/*Tests.java,**/*.spec.ts
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**,**/target/**,**/*.jar,**/mvnw,**/mvnw.cmd,**/.angular/**,**/src/environments/**,**/src/test.ts,**/src/polyfills.ts
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml
            -Dsonar.javascript.lcov.reportPaths=front/coverage/bobapp/lcov.info
            -Dsonar.typescript.lcov.reportPaths=front/coverage/bobapp/lcov.info
            -Dsonar.qualitygate.wait=true
            -Dsonar.verbose=true

      # 8Ô∏è‚É£ Upload Coverage Reports as Artifacts
      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco/
          retention-days: 30

      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage-report
          path: front/coverage/
          retention-days: 30

      # 9Ô∏è‚É£ Final Summary
      - name: Final Summary
        if: always()
        run: |
          echo "üéØ ANALYSIS COMPLETE! üéØ"
          echo "======================"
          echo ""
          echo "üìä SonarCloud Dashboard:"
          echo "https://sonarcloud.io/project/overview?id=EmySim_BobApp"
          echo ""
          echo "üìÅ Coverage Reports uploaded as artifacts"
          echo "‚úÖ Check the Actions tab for downloadable reports"