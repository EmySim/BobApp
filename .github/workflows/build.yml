name: Build
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Compile Java sources before SonarQube scan (adapt to your build tool)
      - name: Build Java sources
        run: |
          if [ -f "gradlew" ]; then
            ./gradlew build
          elif [ -f "pom.xml" ]; then
            mvn clean compile
          else
            echo "No Gradle or Maven build file found. Skipping Java compilation."
          fi
        shell: bash

      - name: Check SONAR_TOKEN presence
        run: |
          if [ -z "${SONAR_TOKEN}" ]; then
            echo "SONAR_TOKEN is missing or empty!"
            exit 1
          else
            echo "SONAR_TOKEN is present. Length: ${#SONAR_TOKEN}"
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
          SONAR_PROJECT_KEY: "EmySim_BobApp"
          SONAR_ORGANIZATION: "emysim"
        with:
          # Adapt sonar.java.binaries according to your build tool
          args: >
            -Dsonar.java.binaries=build/classes