name: Build, Test & Coverage Analysis

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - main

jobs:
  build-and-test:
    name: Build, Test & Coverage Analysis
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Crucial pour l'analyse des PR et du "New Code" par SonarCloud
          fetch-depth: 0 

      # --- Configuration des environnements ---
      
      # 2Ô∏è‚É£ Setup Java (JDK 17 for Maven and SonarScanner)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          # Le cache Maven est mieux g√©r√© par l'√©tape 4 pour plus de flexibilit√©
          
      # 3Ô∏è‚É£ Setup Node.js for Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Utilisation du cache int√©gr√© pour les modules NPM
          cache: 'npm'
          cache-dependency-path: 'front/package-lock.json'

      # 4Ô∏è‚É£ Restore Maven cache (D√©plac√© apr√®s le setup Java)
      - name: Restore Maven packages cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2
          # Utilisation de la date comme cl√© si le pom.xml n'a pas chang√© pour garantir un restore plus rapide
          key: ${{ runner.os }}-m2-${{ hashFiles('**/back/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # --- Pr√©paration et Tests du Monorepo ---
      
      # 5Ô∏è‚É£ Backend: Build and Test with Coverage
      - name: Backend - Build and Test with Jacoco Coverage
        working-directory: back
        # Important : Assurez-vous que le secret JWT_SECRET est configur√© si les tests en ont besoin
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          echo "üî® Building backend..."
          # Clean, Compile, Test, et g√©n√©rer le rapport Jacoco
          mvn clean install -DskipTests=true
          echo "üß™ Running backend tests with coverage..."
          # Ex√©cute les tests et g√©n√®re le rapport jacoco.xml n√©cessaire pour SonarCloud
          mvn test jacoco:report
          echo "üìä Jacoco coverage report generated in target/site/jacoco/"

      # 6Ô∏è‚É£ Frontend: Install dependencies and test with coverage
      # NPM Install
      - name: Frontend - Install dependencies
        working-directory: front
        run: npm ci
        
      # Run Tests
      - name: Frontend - Run tests with coverage
        working-directory: front
        env:
          CI: true
        run: |
          echo "üß™ Running frontend tests with coverage..."
          # Votre script NPM doit g√©n√©rer le rapport LCOV dans front/coverage/bobapp/
          npm run test:ci
          echo "üìä LCOV coverage report generated!"

      # --- Analyse de Qualit√© ---
      
      # 7Ô∏è‚É£ SonarCloud Analysis (Monorepo: Front + Back)
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: "."
          args: >
            # Ces arguments forcent les cl√©s d'identification, r√©solvant l'erreur "Project not found"
            -Dsonar.projectKey=emysim_BobApp 
            -Dsonar.organization=emysim
        env:
          # Le nouveau token r√©g√©n√©r√© !
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      # --- Post-Analyse et Nettoyage ---
      
      # 8Ô∏è‚É£ Upload Coverage Reports as Artifacts (Pour inspection manuelle)
      - name: Upload Coverage Reports Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          # Grouper les deux chemins pour un seul upload
          path: |
            back/target/site/jacoco/
            front/coverage/bobapp/
          retention-days: 30
          
      # 9Ô∏è‚É£ Save Maven cache (Doit √™tre la derni√®re utilisation de la cache pour √™tre sauvegard√©e)
      - name: Save Maven packages cache
        uses: actions/cache/save@v4
        if: always() # Toujours ex√©cuter pour ne pas perdre le cache
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/back/pom.xml') }}
          
      # üîü Save SonarCloud cache (Pour acc√©l√©rer les scans futurs)
      - name: Save SonarCloud cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar